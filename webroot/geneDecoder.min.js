function extractPointsFromPath(t){const e=t.split(/(?=[MLHVCSQTAZmlhvcsqtaz])/),n=[];return e.forEach((t=>{const e=t.slice(1).trim().split(/[\s,]+/).map(Number);e.length>=2&&n.push([e[0],e[1]])})),n}function generateSeparators(t){t.length<2&&console.error("At least two points are required to generate separators.");const e=t,n=[];for(let t=0;t<e.length/2;t++){const o=[e[t],e[e.length-1-t]];n.push(o)}return n}function generateMidpoints(t){return t.map((([t,e])=>[(t[0]+e[0])/2,(t[1]+e[1])/2]))}function thinCreature(t,e,n,o){return t.map((([t,r],i)=>{const a=e[i],s=0===i&&void 0!==o?o:n;return[[t[0]+(a[0]-t[0])*s,t[1]+(a[1]-t[1])*s],[r[0]+(a[0]-r[0])*s,r[1]+(a[1]-r[1])*s]]}))}function adjustCreatureLength(t,e){e/=2.5;const n=t.length-1,o=getMidpointBetweenSeparators(t[1],t[2]),r=[...t];r[2]=[[(1-e)*t[2][0][0]+e*o[0][0],(1-e)*t[2][0][1]+e*o[0][1]],[(1-e)*t[2][1][0]+e*o[1][0],(1-e)*t[2][1][1]+e*o[1][1]]],r[1]=[[(1-e)*t[1][0][0]+e*o[0][0],(1-e)*t[1][0][1]+e*o[0][1]],[(1-e)*t[1][1][0]+e*o[1][0],(1-e)*t[1][1][1]+e*o[1][1]]];const i=r[n-1];r[n]=[[(1-e)*t[n][0][0]+e*i[0][0],(1-e)*t[n][0][1]+e*i[0][1]],[(1-e)*t[n][1][0]+e*i[1][0],(1-e)*t[n][1][1]+e*i[1][1]]];const a=r[1];return r[0]=[[(1-e)*t[0][0][0]+e*a[0][0],(1-e)*t[0][0][1]+e*a[0][1]],[(1-e)*t[0][1][0]+e*a[1][0],(1-e)*t[0][1][1]+e*a[1][1]]],r}function createFilledShape(t,e){ctx.beginPath(),ctx.moveTo(t[0][0][0],t[0][0][1]);for(let e=0;e<t.length;e++)ctx.lineTo(t[e][0][0],t[e][0][1]);for(let e=t.length-1;e>=0;e--)ctx.lineTo(t[e][1][0],t[e][1][1]);ctx.closePath(),ctx.fillStyle=e,ctx.fill()}function getMidpointBetweenSeparators(t,e){return[[(t[0][0]+e[0][0])/2,(t[0][1]+e[0][1])/2],[(t[1][0]+e[1][0])/2,(t[1][1]+e[1][1])/2]]}function generateHeadShape(t,e){const[n,o]=t;e/=2;return[n,[n[0]*(1-e)-40,n[1]],[o[0]*(1-e)-20,o[1]-10],o]}function drawHeadShape(t,e){const n=generateHeadShape(t,e);return ctx.beginPath(),ctx.moveTo(n[0][0],n[0][1]),ctx.lineTo(n[1][0],n[1][1]),ctx.lineTo(n[2][0],n[2][1]),ctx.lineTo(n[3][0],n[3][1]),n}function adjustTailLength(t,e,n){if(e.length<3)return t;const o=[...e];for(let t=1;t<e.length;t++)o[t]=[(1-n)*o[t][0]+n*o[t-1][0],(1-n)*o[t][1]+n*o[t-1][1]];const r=[...t];for(let e=1;e<t.length;e++){const o=r[e-1];r[e]=[[(1-n)*t[e][0][0]+n*o[0][0],(1-n)*t[e][0][1]+n*o[0][1]],[(1-n)*t[e][1][0]+n*o[1][0],(1-n)*t[e][1][1]+n*o[1][1]]]}return r}function getEyeRegion(t){const e=[(t[0][0]+t[3][0])/2,(t[0][1]+t[3][1])/2];return[t[0],t[1],e]}function randomPointInTriangle([t,e,n]){let o=Math.random(),r=Math.random();return o+r>1&&(o=1-o,r=1-r),[t[0]+o*(e[0]-t[0])+r*(n[0]-t[0]),t[1]+o*(e[1]-t[1])+r*(n[1]-t[1])]}function autoMinDist(t){function e([t,e],[n,o]){return Math.sqrt((n-t)**2+(o-e)**2)}const[n,o,r]=t;return.15*((e(n,o)+e(o,r)+e(r,n))/3)}function isFarEnough(t,e,n){return e.every((([e,o])=>{const r=e-t[0],i=o-t[1];return Math.sqrt(r*r+i*i)>=n}))}function generateRandomEyes(t,e){if(3!==t.length)return console.error("generateRandomEyes requires a triangular eyeRegion."),[];const n=autoMinDist(t),o=[];for(;o.length<e;){const e=randomPointInTriangle(t);isFarEnough(e,o,n)&&o.push(e)}return o}function drawEyes(t,e){ctx.fillStyle="white",ctx.strokeStyle="black",t.forEach((([t,n])=>{ctx.beginPath(),ctx.arc(t,n,e,0,2*Math.PI),ctx.fill(),ctx.stroke()}))}function bezierQuad(t,e,n,o){return[(1-o)*(1-o)*t[0]+2*(1-o)*o*e[0]+o*o*n[0],(1-o)*(1-o)*t[1]+2*(1-o)*o*e[1]+o*o*n[1]]}function generateLimbAttachmentPoints(t,e,n=20){const[o,r,i]=t,a=[];for(let t=0;t<=n;t++){const e=t/n;a.push(bezierQuad(o,r,i,e))}const s=[];let c=0;for(let t=1;t<a.length;t++){const n=a[t-1],o=a[t];c+=Math.hypot(o[0]-n[0],o[1]-n[1]),c>=e&&(s.push(o),c=0)}return s}function generateLimbs(t,e,n,o){const r=[];for(let i=0;i<e;i++){const a=i/(e-1),s=Math.round(a*(t.length-1)),c=t[s],l=Math.floor(t.length/2),h=(l-s)/l,u=[c[0],c[1]],d=-h*o*.5,g=[u[0]+d,u[1]+o];r.push({base:u,tip:g,thickness:n})}return r}function drawLimbs(t,e){if(ctx.lineCap="round",ctx.lineJoin="round",0===t.length)return;const n=t.reduce(((t,e)=>t+e.base[0]),0)/t.length;for(let o=0;o<t.length;o++){const{base:r,tip:i,thickness:a}=t[o],s=i[1]-r[1],c=.3*s,l=.7*s;let h,u;if(2===t.length)h=a*(0===o?1:.5),u=-1;else{h=Math.abs(r[0]-n)/n*(9*a),u=r[0]<n?-1:1}const d=u*h,g=[r[0]+d,r[1]+c],f=[g[0],g[1]+l];ctx.lineWidth=a,ctx.strokeStyle=e,ctx.beginPath(),ctx.moveTo(r[0],r[1]),ctx.lineTo(g[0],g[1]),ctx.stroke(),ctx.beginPath(),ctx.moveTo(g[0],g[1]),ctx.lineTo(f[0],f[1]),ctx.stroke()}}var TRAIT_SIZES={shiny:1,rgbMode:1,color1:6,color2:6,headLength:2,headWidth:2,torsoLength:2,torsoWidth:2,limbLength:2,limbWidth:2,tailWidth:2,tailLength:2,eyeCount:2,armCount:2,spikeDensity:2};function generateTraitDefinitions(){let t=0;const e={};return Object.entries(TRAIT_SIZES).reverse().forEach((([n,o])=>{e[n]={bits:o,shift:t,mask:(1<<o)-1},t+=o})),e}var ctx,TRAIT_DEFINITIONS=generateTraitDefinitions();function decodeGene(t){const e={};for(const[n,o]of Object.entries(TRAIT_DEFINITIONS))e[n]=t>>o.shift&o.mask;return e}function encodeGene(t){let e=0;for(const[n,o]of Object.entries(t)){const t=TRAIT_DEFINITIONS[n];e|=(o&t.mask)<<t.shift}return 1073741823&e}function rotateLeft(t,e){return 0===t.length?t:(e%=t.length,[...t.slice(e),...t.slice(0,e)])}function movePoints(t,e,n){const o=n[0]-e[0],r=n[1]-e[1];return t.map((([t,e])=>[t+o,e+r]))}function bits2hsl(t,e,n,o){return`hsl(${t/((1<<e)-1)*360}, ${n}%, ${o}%)`}function renderCreature(t,e=400){const n=decodeGene(t),o=document.createElement("canvas");o.width=e,o.height=e;const r=o.getContext("2d");if(!r)throw new Error("Could not get canvas context");(ctx=r).clearRect(0,0,o.width,o.height),ctx.save();const i=n.color1,a=n.color2,s=TRAIT_DEFINITIONS.color1.bits,c=bits2hsl(i,s,80,45),l=bits2hsl(i,s,70,40),h=bits2hsl(i,s,60,30),u=bits2hsl(a,s,100,50);ctx.fillStyle=c;const d=1<<TRAIT_DEFINITIONS.torsoLength.bits,g=1<<TRAIT_DEFINITIONS.torsoWidth.bits,f=n.torsoWidth/g,T=n.torsoLength/d,I=1<<TRAIT_DEFINITIONS.headLength.bits,L=n.headLength/I,p=1<<TRAIT_DEFINITIONS.tailWidth.bits,x=1<<TRAIT_DEFINITIONS.tailLength.bits,m=n.tailWidth/p,b=n.tailLength/x,S=n.eyeCount,E=1<<TRAIT_DEFINITIONS.limbWidth.bits,N=1<<TRAIT_DEFINITIONS.limbLength.bits,y=n.limbWidth/E,M=n.limbLength/N,C=2*n.armCount;let R=extractPointsFromPath("M187 178L140.5 128.5L108.5 157.5L144 243L231 286L273 268L277.5 223.5L244 192.5L187 178Z");R=R.slice(1),R=rotateLeft(R,1);const F=generateSeparators(R),P=adjustCreatureLength(F,T),A=generateMidpoints(P),D=thinCreature(P,A,f),v=generateMidpoints([D[D.length-1]])[0],w=ctx.createLinearGradient(0,0,0,400);w.addColorStop(0,c),w.addColorStop(1,n.shiny?u:l),createFilledShape(D,w);let O=extractPointsFromPath("M88.5 11.5L8.5 4.5L6.25 26.75L4 49L8.5 90L32.5 130.5L71 154.5L117.5 138.5L126.5 60.5L88.5 11.5Z");O=O.slice(1);const _=O.splice(1,1)[0];O=rotateLeft(O,1),O=movePoints(O,_,v);const k=adjustTailLength(generateSeparators(O),generateMidpoints(F),b),W=thinCreature(k,generateMidpoints(k),m,f),G=ctx.createLinearGradient(0,180,0,400);G.addColorStop(0,c),G.addColorStop(1,u),createFilledShape(W,G),ctx.fillStyle=c;const j=drawHeadShape(D[0],L);ctx.fill();drawEyes(generateRandomEyes(getEyeRegion(j),S),8);const q=C>5?10:15,H=generateLimbs(generateLimbAttachmentPoints(A.slice(1),10),C,q+q*y,60+60*M),Z=ctx.createLinearGradient(0,180,0,300);return Z.addColorStop(0,c),Z.addColorStop(1,n.shiny?u:h),drawLimbs(H,Z),o.toDataURL()}export{ctx,decodeGene,encodeGene,renderCreature};